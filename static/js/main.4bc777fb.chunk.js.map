{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","commissionNoApplyDate","Date","holidays","scheduleValues","schedules","useState","schedule","setSchedule","stopDate","setStopDate","startDate","setStartDate","endDate","setEndDate","undefined","extendDates","setExtendDates","payAmount","setPayAmount","totalDates","setTotalDates","usedDates","setUsedDates","refundTargetFee","setRefundTargetFee","dailyFee","setDailyFee","usedFee","setUsedFee","commission","setCommission","refundFee","setRefundFee","toMyString","dateObj","month","getMonth","date","getDate","getFullYear","join","handleExtendChange","e","row","col","items","target","value","className","id","type","onChange","map","key","i","name","handleScheduleChange","Array","keys","placeholder","onClick","newTotalDates","index","start","end","dayIndex","result","current","setDate","getDay","dateString","indexOf","push","getDaysBetweenDates","flat","sort","totalDays","length","STOPDATE","newUsedDates","filter","usedDays","Math","floor","min","newCommission","totalDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bc777fb.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  // const ONE_DAY = 1000 * 60 * 60 * 24\n\n  const commissionNoApplyDate = new Date(\"2020-03-01\")\n  const holidays = [\n    \"2020-01-01\",\n    \"2020-01-24\",\n    \"2020-01-25\",\n    \"2020-01-27\"\n  ] // 추석\n  const scheduleKeys = [\n    'monWedFri',\n    'tueThuSat',\n    'tueThu',\n    'monToFri',\n    'monToSat',\n    'sat',\n  ]\n  const scheduleValues = [\n    '주 3회(월/수/금)',\n    '주 3회(화/목/토)',\n    '주 2회(화/목)',\n    '주 5회(월~금)',\n    '주 6회(월~토)',\n    '주 1회(토)',\n  ]\n  const schedules = [\n    // 일 - 월 - 화 - 수 - 목 - 금 - 토\n    [1, 3, 5],\n    [2, 4, 6],\n    [2, 4],\n    [1, 2, 3, 4, 5],\n    [1, 2, 3, 4, 5, 6],\n    [6]\n  ]\n\n  const [schedule, setSchedule] = useState([]) // contains list of indices of schedules\n  const [stopDate, setStopDate] = useState(\"2020-02-26\")\n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n  const [extendDates, setExtendDates] = useState([[undefined, undefined], [undefined, undefined], [undefined, undefined]])  // [[\"2020-02-02\", \"2020-03-01\"], ...]\n  const [payAmount, setPayAmount] = useState(0)\n\n  const [totalDates, setTotalDates] = useState([])\n  const [usedDates, setUsedDates] = useState([])\n  const [refundTargetFee, setRefundTargetFee] = useState(0)\n\n  const [dailyFee, setDailyFee] = useState(0)\n  const [usedFee, setUsedFee] = useState(0)\n  const [commission, setCommission] = useState(0)\n  const [refundFee, setRefundFee] = useState(0)\n\n  function toMyString(dateObj) {\n    var month = dateObj.getMonth() + 1\n    var date = dateObj.getDate()\n    return [\n      dateObj.getFullYear(),\n      `${month < 10 ? '0' : ''}${month}`,\n      `${date < 10 ? '0' : ''}${date}`\n    ].join('-')\n  }\n\n  function handleStopDateChange(e) {\n    setStopDate(e.target.value)\n  }\n\n  function handleStartDateChange(e) {\n    setStartDate(e.target.value)\n  }\n\n  function handleEndDateChange(e) {\n    setEndDate(e.target.value)\n  }\n\n  function handlePayAmountChange(e) {\n    setPayAmount(e.target.value)\n  }\n\n  function handleExtendChange(e, row, col) {\n    var items = [...extendDates]\n    items[row][col] = e.target.value\n    setExtendDates(items)\n  }\n\n  function handleScheduleChange(i) {\n    setSchedule(schedules[i])\n  }\n\n  /*\n  * dayIndex: 0 means Sun, ..., 6 means Sat\n  */\n  function getDaysBetweenDates(start, end, dayIndex) {\n    var result = [];\n    // Copy start date\n    var current = new Date(start);\n    // Shift to next of required days\n    current.setDate(current.getDate() + (dayIndex - current.getDay() + 7) % 7);\n    // While less than end date, add dates to result array\n\n    while (current <= end) {\n      var dateString = toMyString(current)\n      if (holidays.indexOf(dateString) === -1) { // it's not in holiday\n        // 정지 기간 동안 빼기\n        if ((new Date(extendDates[0][0]) <= current && current <= new Date(extendDates[0][1])) ||\n            (new Date(extendDates[1][0]) <= current && current <= new Date(extendDates[1][1])) ||\n            (new Date(extendDates[2][0]) <= current && current <= new Date(extendDates[2][1]))) {\n          // do nothing\n        } else {\n          result.push(dateString);\n        }\n      }\n      current.setDate(current.getDate() + 7);\n    }\n    return result;\n  }\n\n  function calculate() {\n      // TOTAL DAYS\n      const newTotalDates = schedule.map(index =>\n        getDaysBetweenDates(new Date(startDate), new Date(endDate), index))\n          .flat()\n          .sort()\n      const totalDays = newTotalDates.length\n      // from start date to end date, get list of dates of schedule [월,수,금]\n      setTotalDates(newTotalDates)\n\n      // USED DAYS\n      const STOPDATE = new Date(stopDate)\n      const newUsedDates = newTotalDates.filter(date => new Date(date) < STOPDATE)\n      const usedDays = newUsedDates.length\n      setUsedDates(newUsedDates)\n\n      // DAILY FEE\n      var dailyFee = Math.floor(payAmount / totalDays)\n      setDailyFee(dailyFee)\n\n      var usedFee = dailyFee * usedDays\n      setUsedFee(usedFee)\n\n      var refundTargetFee = Math.min((totalDays - usedDays) * dailyFee, payAmount)\n      setRefundTargetFee(refundTargetFee)\n\n      var newCommission = (new Date(startDate) < commissionNoApplyDate) ?\n                        Math.floor(refundTargetFee * 0.025) :\n                        0\n      setCommission(newCommission)\n\n      var refundFee = refundTargetFee - newCommission\n      setRefundFee(refundFee)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>아빠를 위한 선물같은 계산기</h1>\n      <div id=\"common-info\" className=\"row\">\n        <label>\n          휴관 시작 일자 &nbsp;\n          <input type=\"date\" value={stopDate} onChange={handleStopDateChange} />\n        </label>\n      </div>\n\n      <div id=\"info\">\n        <div id=\"startEndDate\" className=\"row\">\n          <h3>회원권 정보</h3>\n          <label>\n            시작일자 (예: 2020-02-01) &nbsp;\n            <input type=\"text\" value={startDate} onChange={handleStartDateChange}/>\n          </label>\n          <br/>\n          <label>\n            종료일자 (예: 2020-02-01) &nbsp;\n            <input type=\"text\" value={endDate} onChange={handleEndDateChange}/>\n          </label>\n        </div>\n\n        <div className=\"row\">\n          <h3>프로그램 종류 선택</h3>\n          <div id=\"programs\">\n            { scheduleKeys.map((key, i) =>\n              <label key={key}>\n                <input type=\"radio\" name=\"schedule\" value={key} onChange={() => handleScheduleChange(i)}/>\n                { scheduleValues[i] }\n              </label>\n            ) }\n          </div>\n        </div>\n\n        <div id=\"extend\" className=\"row\">\n          <h3>연기</h3>\n          <p>연기 했다면 입력하고, 연장하지 않았다면 입력하지 않으셔도 돼요 (최대 3회)</p>\n\n          {[...Array(3).keys()].map(i =>\n            <div className=\"extend-each\" key={i + 1}>\n              <table>\n                <tr>\n                  <td>{i + 1}회 연기 시작일자</td>\n                  <td></td>\n                  <td>{i + 1}회 연기 종료일자</td>\n                </tr>\n                <tr>\n                  <td>\n                    <input type=\"text\"\n                           placeholder=\"예) 2020-02-01\"\n                           value={extendDates[i][0]}\n                           onChange={(e) => handleExtendChange(e, i, 0)} />\n                  </td>\n                  <td>~</td>\n                  <td>\n                    <input type=\"text\"\n                           placeholder=\"예) 2020-02-01\"\n                           value={extendDates[i][1]}\n                           onChange={(e) => handleExtendChange(e, i, 1)} />\n                  </td>\n                </tr>\n              </table>\n            </div>\n          )}\n        </div>\n\n        <div id=\"payment\">\n          <h3>결제</h3>\n          <label>\n            결제금액 &nbsp;\n            <input type=\"number\" value={payAmount} onChange={handlePayAmountChange} />&nbsp;원\n          </label>\n        </div>\n\n        <br/>\n        <button onClick={calculate}>계산</button>\n\n        <div id=\"result\">\n          <h1>계산 결과</h1>\n          <table>\n          <thead>\n            <tr>\n              <th>이용일수<br/>(A)</th>\n              <th>전체일수<br/>(B)</th>\n              <th>결제액<br/>(C)</th>\n              <th>1일 이용금액<br/>(D = C / B)</th>\n              <th>사용금액<br/>(E = D * A)</th>\n              <th>환불대상액<br/>(F = (B - A) * D)</th>\n              <th>카드사 수수료<br/>(G = F * 2.5%)</th>\n              <th>환불지급액<br/>(H = F - G)</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{ usedDates.length }</td>\n              <td>{ totalDates.length }</td>\n              <td>{ payAmount }</td>\n              <td>{ dailyFee }</td>\n              <td>{ usedFee }</td>\n              <td>{ refundTargetFee }</td>\n              <td>{ commission }</td>\n              <td>{ refundFee }</td>\n            </tr>\n          </tbody>\n          </table>\n\n          <hr/>\n          <h3>디테일</h3>\n          <table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>전체 일자</th>\n              <th>이용 일자</th>\n            </tr>\n          </thead>\n          <tbody>\n          { totalDates.map((totalDate, index) =>\n            <tr key={`detail${index}`}>\n              <td>{ index + 1 }</td>\n              <td>{ totalDate }</td>\n              <td>{ usedDates[index] }</td>\n            </tr>\n          )}\n          </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}